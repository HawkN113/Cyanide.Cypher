//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Experiments\Cyanide.cypher\src\Cyanide.Cypher\Grammar\SQL.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SQLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public interface ISQLVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.sqlStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSqlStatement([NotNull] SQLParser.SqlStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.selectStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectStatement([NotNull] SQLParser.SelectStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.selectElements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectElements([NotNull] SQLParser.SelectElementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.tableSource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableSource([NotNull] SQLParser.TableSourceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.joinClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJoinClause([NotNull] SQLParser.JoinClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.joinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJoinType([NotNull] SQLParser.JoinTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhereClause([NotNull] SQLParser.WhereClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.groupByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupByClause([NotNull] SQLParser.GroupByClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.havingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHavingClause([NotNull] SQLParser.HavingClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] SQLParser.ConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] SQLParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOperator([NotNull] SQLParser.ComparisonOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.logicalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOperator([NotNull] SQLParser.LogicalOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.tableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableName([NotNull] SQLParser.TableNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.columnName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColumnName([NotNull] SQLParser.ColumnNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SQLParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] SQLParser.ConstantContext context);
}
